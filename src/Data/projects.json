[
  {
    "title": "Earworm",
    "url": "https://earworm.netlify.com/",
    "github": "https://github.com/stephenkeating/earworm-frontend",
    "description": "Name that tune app",
    "image": "stock-tracker.png",
    "tech": 
      [
        "React.js", 
        "Ruby on Rails", 
        "Spotify APIs", 
        "Custom CSS", 
        "PostgreSQL", 
        "AWS", 
        "Datadog"
      ],
    "bullets": 
      [
        "Created algorithm to match user guesses to track titles, including Jaro-Winkler metric for fuzzy matching",
        "Implemented Spotify APIs on backend to build Ruby on Rails API that called Spotify Web player on the frontend",
        "Deployed to AWS and installed the Datadog agent to monitor analytics and performance",
        "Designed database schema using ActiveRecord and PostgreSQL to allow fast loading of large amounts of data",
        "Wrote responsive interface in consultation with a designer with entirely custom CSS"
      ]
  },
  {
    "title": "5 Games",
    "url": "https://fivegames.netlify.app/playlists/16",
    "github": "https://github.com/5-Games",
    "description": "NBA game playlist curator and sharing app",
    "image": "stock-tracker.png",
    "tech": 
      [
        "JWT auth", 
        "React.js", 
        "Redux", 
        "Thunk", 
        "Hooks", 
        "React-Router", 
        "Ruby on Rails", 
        "Multiple External APIs", 
        "NBA.com Web Scraping", 
        "PostgreSQL", 
        "Custom CSS", 
        "Github Team Workflow"
      ],
    "bullets": 
      [
        "Secured app through JWT authorization and bcrypt",
        "Collected live data from multiple external APIs, info scraped from NBA.com & custom-built API to make app expandable & ready for 2.0 features including data-tracking",
        "Optimized memory and database usage through a custom schema built with Rails, ActiveRecord and PostgreSQL",
        "Designed and implemented fully custom CSS to follow responsive but dynamic and functional design philosophy",
        "Followed modular design patterns in React frontend to allow for adaptability and reusable code base"
      ]
  },
  {
    "title": "Stock Tracker Demo",
    "url": "https://keating-stock-tracker.netlify.com/",
    "github": "https://github.com/stephenkeating/stock-tracker-ttp",
    "description": "Stock portfolio app",
    "image": "stock-tracker.png",
    "tech": 
      [
        "JWT auth",
        "React.js",
        "Redux",
        "Thunk",
        "Ruby on Rails",
        "IEX Cloud APIs",
        "PostgreSQL",
        "Custom CSS"
      ],
    "bullets": 
      [
        "Managed frontend complexity with Redux to load and edit user data across various components of the app",
        "Employed IEX Cloud APIs to get “live” stock price data, storing purchase data to BE and displaying the difference between purchase price and current value"
      ]
  }
]